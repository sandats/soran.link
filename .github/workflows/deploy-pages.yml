# GitHub Actionsワークフローの名前
name: Deploy to GitHub Pages and Purge Cloudflare Cache

# ワークフローが実行されるタイミングを指定
on:
  push:
    branches:
      - main
  # 手動で実行することも可能にする
  workflow_dispatch:

# 実行の重複を防ぐ設定
concurrency:
  group: "pages"
  cancel-in-progress: true

# ワークフローが必要とする権限
permissions:
  contents: read
  pages: write
  id-token: write

# ジョブ（実行される一連の処理）を定義
jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare public directory
        run: |
          mkdir -p ./public
          # HTMLファイルを圧縮してpublicにコピー
          npx html-minifier-terser --input-dir . --output-dir ./public --file-ext html --remove-comments --collapse-whitespace
          # JavaScriptファイルを圧縮してpublicにコピー
          npx terser ./script.js -o ./public/script.js -c -m
          # ビルドしたCSSやその他の必要なファイルをpublicにコピー
          cp ./style.css ./public/
          cp -r ./img ./public/
          cp ./photos.json ./public/
          # photoディレクトリ構造を作成し、HTMLをコピー
          mkdir -p ./public/photo
          cp ./photo/index.html ./public/photo/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Purge Cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

# GitHub Actionsワークフローの名前
name: Deploy Astro to GitHub Pages

# ワークフローが実行されるタイミングを指定
on:
  push:
    branches:
      - main
  workflow_dispatch:

# 実行の重複を防ぐ設定
concurrency:
  group: "pages"
  cancel-in-progress: true

# ワークフローが必要とする権限
permissions:
  contents: read
  pages: write
  id-token: write

# ジョブ（実行される一連の処理）を定義
jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Node.js環境をセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # LTS版のNode.jsバージョンを指定
          cache: 'npm'

      # 3. 開発ツールをインストール
      - name: Install dependencies
        run: npm ci

      # 4. Astroサイトをビルド
      # `npm run build` を実行すると、`dist` ディレクトリに公開用ファイルが生成されます
      - name: Build Astro site
        run: npm run build

      # 5. GitHub Pagesにアップロードするファイルを準備
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Astroがビルドした成果物が出力される `dist` ディレクトリを指定
          path: ./dist

      # 6. GitHub Pagesにデプロイを実行
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # 7. デプロイ完了後、Cloudflareのキャッシュをクリア
      - name: Purge Cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
